<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="180" height="50" xmlns:spreadUI="views.spreadUI.*">
	<mx:Script>
		<![CDATA[
			import roma.util.FiltersUtil;
			import roma.util.ImageHandle;
			import roma.util.MultiLang;
			import views.spreadUI.MyAlert;
			import roma.logic.rule.ItemRule;
			import roma.logic.object.player.ItemResManager;
			import views.spreadUI.speedUp.ItemSelectSpeedUpWin;
			import roma.message.events.ProduceEvent;
			import roma.util.ClientUtil;
			import mx.utils.UIDUtil;
			import roma.logic.object.castle.TFHelper;
			import roma.common.valueObject.ManufactureBean;
		
			[Bindable]
			private var _produceBean:ManufactureBean; 
			[Bindable]
			private var _needTime:String;
			[Bindable]
			private var _imgSrc:String;
			[Bindable]
			private var _selectIndex:int;
			[Bindable]
			private var _haveSpeedUp:Boolean;

			[Bindable]
			private var btnToolTip:String;
			[Bindable]
			private var type_name:String;
						
			public function set produceBean(b:ManufactureBean):void{
				this._produceBean = b;
				this._haveSpeedUp = b.havaSpeedUp;
				this._needTime = MultiLang.timeFormatToString(this._produceBean.costTime);
				this._imgSrc =TFHelper.instance.getTfIcon(this._produceBean.type);
				this.type_name = TFHelper.instance.getTfName(this._produceBean.type);
				
				if(this._haveSpeedUp){
					this.btnToolTip =MultiLang.msg('public.speed.limit');
				}else{
					this.btnToolTip =null;
				}		
			}
			
			public function get produceBean():ManufactureBean{
				return this._produceBean;
			}
			
			public function get haveSpeedUp():Boolean{
				return this._haveSpeedUp;
			}
			
			public function speedUpItemSelected():void{
				if(this._haveSpeedUp){
					MyAlert.show(MultiLang.msg('public.speed.limit'));
					return;
				}
				
				ItemSelectSpeedUpWin.show(ItemResManager.speedArmyArrayCollection,speedUpProduce);
			}
			
			public function speedUpProduce(rule:ItemRule =null):void{
				if(rule !=null)
					ProduceEvent.speedup(TroopTypeList.EVENT_PRODUCE_SPEED,this._produceBean,rule);
			}

			public function cancelProduce():void{
				ProduceEvent.cancel(TroopTypeList.EVENT_PRODUCE_CANCEL,this._produceBean);
			}
		]]>
	</mx:Script>
	
	<mx:Canvas  styleName="smallLogoBG" width="80" height="40" left="5" verticalCenter="0" toolTip="{this.type_name}">
		<mx:Image 
			source="{this._imgSrc}"  id="iconCon" bottom="3" 
			right="3" scaleY="{34/46}" scaleX="{74/102}" 
			updateComplete="ImageHandle.onLoadComplete(event)" 
			top="3" left="3"/>
	</mx:Canvas>
    <mx:Canvas width="74" height="12" styleName="blackBG" alpha="0.5" left="8" bottom="8" mouseChildren="false" mouseEnabled="false"/>
	<mx:Label text="{this._produceBean.number}"
	  styleName="armyNameSelectLabel"  enabled="false" filters="{[FiltersUtil.glowFilter]}" 
	  textAlign="right" width="74" left="8" bottom="3" mouseChildren="false" mouseEnabled="false"/>

	<mx:Label text="{this._needTime}" textAlign="left" left="88" top="8" width="68"/>

	<mx:HBox bottom="5" horizontalGap="3" width="39" left="88">
		<mx:Button  width="18" height="18" click="speedUpItemSelected()" styleName="buildingSpeedUpBtn" enabled="{!this._haveSpeedUp}" toolTip="{this.btnToolTip}"/>
		<mx:Button  width="18" height="18" click="cancelProduce()" styleName="cancleIconBtn"/>
	</mx:HBox>
</mx:Canvas>
