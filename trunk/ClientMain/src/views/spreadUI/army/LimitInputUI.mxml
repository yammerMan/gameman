<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" height="24">
	<mx:Script>
		<![CDATA[
		
			public var inputValue:Number;
			public var onInputDataChange:Function;
			public var onValChange:Function;
			public var actionType:int;
			public var valueMin:int = 0;

			private var _maxValue:int;
			
			[Bindable]
			public var effectValue:int;
			
			public function set intValue(value:int):void{
				this.effectValue = value;
			}
			
			public function set maxValue(value:int):void{
				this._maxValue = value;
			}
			
			public function get curValue():int{
				return this.effectValue;
			}
			
			private function onChangeHandle(event:Event):void{
				var num:int = int(this.valueTextInput.text);
  				
				if(num>=this._maxValue){
					this.effectValue = this._maxValue ;
					this.valueTextInput.text = String(this._maxValue);
					if(this.onInputDataChange != null){
						this.onInputDataChange.apply(this,[this.effectValue]);
					}
					return;
				}else if(num <= this.valueMin){
					this.effectValue = this.valueMin;
					this.valueTextInput.text = String(this.valueMin);
					if(this.onInputDataChange != null){
						this.onInputDataChange.apply(this,[this.effectValue]);
					}
					return;
				}
				else{
					this.effectValue = num;
					if(this.onInputDataChange != null){
						this.onInputDataChange.apply(this,[this.effectValue]);
					}
				}
				  
				//用于调用多个参数
				if(this.onValChange !=null){
					this.onValChange.call(this,this.effectValue,actionType,this.inputValue);
				}
			}
			
			public function refresh():void{
				this.valueTextInput.text =String(this.valueMin);
				this.effectValue = this.valueMin;

				if(this.onInputDataChange != null){
					this.onInputDataChange.apply(this,[this.effectValue]);
				}
				if(this.onValChange !=null){
					this.onValChange.call(this,this.effectValue,actionType,this.inputValue);
				}
			}
			
			private function onClickHandle(event:MouseEvent):void{
				var val:int=this.effectValue;
				if(Button(event.target).id == "upBtn"){
					val++;
					if(val<=this._maxValue&&val>=0){
						this.effectValue=val;
					}
					this.valueTextInput.text = String(this.effectValue);
					if(this.onInputDataChange != null){
						this.onInputDataChange.apply(this,[this.effectValue]);
					}
					return;
				}else {
					if(val>valueMin)
					val--;
					if(val<=this._maxValue&&val>=0){
						this.effectValue=val;
					}
					this.valueTextInput.text = String(this.effectValue);
				}
				
				if(this.onInputDataChange != null){
					this.onInputDataChange.apply(this,[this.effectValue]);
				}
				//用于调用多个参数
				if(this.onValChange !=null){
					this.onValChange.call(this,this.effectValue,actionType,this.inputValue);
				}  
			}
			
			private function setComponentFocus():void{
				valueTextInput.setSelection(0,valueTextInput.text.length);
				valueTextInput.setFocus();
			}
		]]>
	</mx:Script>
	<mx:HBox width="100%" height="100%" horizontalCenter="0" verticalCenter="0" horizontalGap="0" horizontalAlign="center" verticalAlign="middle">
		<mx:TextInput id ="valueTextInput" width="100%" height="100%" restrict="0-9" maxChars="7" change="onChangeHandle(event)" fontWeight="normal" text="{this.effectValue}" textAlign="center"/>
		<mx:VBox height="100%" verticalGap="0" verticalAlign="middle" horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<mx:Button id = "upBtn" height="12" mouseDown="onClickHandle(event)" styleName="NumericStepperUpBtn" focusEnabled="false"/>
			<mx:Button id = "downBtn" height="12" mouseDown="onClickHandle(event)" styleName="NumericStepperDownBtn" focusEnabled="false"/>
		</mx:VBox>
	</mx:HBox>
</mx:Canvas>
